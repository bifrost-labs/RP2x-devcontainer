name: Build docker container
# Builds and validate docker container; will push to ghcr.io for releases/tags.

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  push:
    # to publish to ghcr.io, create and publish a release via the GitHub UI
    #   - tag format: v1.87.0 or v1.87.0-rc.1 for preview releases
    #   - do track the versioning of the Rust toolchain, see https://hub.docker.com/_/rust/
    tags:
      - 'v**'

jobs:
  build-and-push:
    strategy:
      fail-fast: false
      matrix:
        platform:
        - os: ubuntu-latest
          arch: amd64
        - os: ubuntu-24.04-arm
          arch: arm64

    runs-on: ${{ matrix.platform.os }}
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
    env:
      IMAGE_NAME: rp2x-rust
      RUST_VERSION: '1.87.0'   # see: https://hub.docker.com/_/rust
      DEBIAN_VERSION: bookworm

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate Dockerfile
        run: |
          docker info
          echo "Validating Dockerfile"
          docker build --check .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GH container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.REPOSITORY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=edge,branch=main
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/${{ matrix.platform.arch }}
          build-args: |
            RUST_VERSION=${{ env.RUST_VERSION }}
            DEBIAN_VERSION=${{ env.DEBIAN_VERSION }}
          load: true

      - name: Save Docker image as tar
        env:
          TAR_NAME: ${{ env.IMAGE_NAME }}-linux-${{ matrix.platform.arch }}-${{ env.DOCKER_METADATA_OUTPUT_VERSION }}.tar
        run: |
          echo "--- Saving Docker image to out/images/${{ env.TAR_NAME }}"
          echo "artifactName=${{ env.TAR_NAME }}" >> $GITHUB_ENV
          docker image ls
          docker image inspect ${{ steps.build.outputs.imageid }}
          mkdir -p out/images
          docker image save ${{ steps.build.outputs.imageid }} -o out/images/${{ env.TAR_NAME }}

      - name: Upload docker images
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ env.artifactName }}
          path: out/images/
          retention-days: 3

      - name: Validate Docker image
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}
        run: |
          echo "Testing the Docker image ${{ env.IMAGE_ID}}"
          docker run --rm ${{ env.IMAGE_ID }} rustc --version
          docker run --rm ${{ env.IMAGE_ID }} cargo --version
          sudo chown -R 1000:1000 ${{ github.WORKSPACE }}/test/
          docker run --rm -w /home/vscode/test/blinky -v ${{ github.WORKSPACE }}/test/:/home/vscode/test/ ${{ env.IMAGE_ID}} cargo build --release
